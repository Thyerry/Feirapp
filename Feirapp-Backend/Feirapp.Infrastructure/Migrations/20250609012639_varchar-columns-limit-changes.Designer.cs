// <auto-generated />
using System;
using Feirapp.Infrastructure.Configuration;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Feirapp.Infrastructure.Migrations
{
    [DbContext(typeof(BaseContext))]
    [Migration("20250609012639_varchar-columns-limit-changes")]
    partial class varcharcolumnslimitchanges
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Feirapp.Entities.Entities.Cest", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("NcmCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Segment")
                        .HasColumnType("longtext");

                    b.HasKey("Code");

                    b.HasIndex("NcmCode");

                    b.ToTable("Cests");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.GroceryItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AltNames")
                        .HasColumnType("longtext");

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Brand")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("CestCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("MeasureUnit")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("NcmCode")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Barcode");

                    b.HasIndex("CestCode");

                    b.HasIndex("NcmCode");

                    b.ToTable("GroceryItems");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("ScanDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Ncm", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Code");

                    b.ToTable("Ncms");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.PriceLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<long>("GroceryItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InvoiceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LogDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("StoreId");

                    b.HasIndex("GroceryItemId", "Barcode", "LogDate", "StoreId")
                        .IsUnique();

                    b.ToTable("PriceLogs");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AltNames")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasMaxLength(8)
                        .HasColumnType("varchar(8)");

                    b.Property<string>("CityName")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Cnpj")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Neighborhood")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Street")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("StreetNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Cnpj")
                        .IsUnique();

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(50)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("char(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Cest", b =>
                {
                    b.HasOne("Feirapp.Entities.Entities.Ncm", "Ncm")
                        .WithMany("Cests")
                        .HasForeignKey("NcmCode");

                    b.Navigation("Ncm");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.GroceryItem", b =>
                {
                    b.HasOne("Feirapp.Entities.Entities.Cest", "Cest")
                        .WithMany("GroceryItems")
                        .HasForeignKey("CestCode");

                    b.HasOne("Feirapp.Entities.Entities.Ncm", "Ncm")
                        .WithMany()
                        .HasForeignKey("NcmCode");

                    b.Navigation("Cest");

                    b.Navigation("Ncm");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Invoice", b =>
                {
                    b.HasOne("Feirapp.Entities.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.PriceLog", b =>
                {
                    b.HasOne("Feirapp.Entities.Entities.GroceryItem", "GroceryItem")
                        .WithMany("PriceHistory")
                        .HasForeignKey("GroceryItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Feirapp.Entities.Entities.Invoice", "Invoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId");

                    b.HasOne("Feirapp.Entities.Entities.Store", "Store")
                        .WithMany("PriceLogs")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroceryItem");

                    b.Navigation("Invoice");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Cest", b =>
                {
                    b.Navigation("GroceryItems");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.GroceryItem", b =>
                {
                    b.Navigation("PriceHistory");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Ncm", b =>
                {
                    b.Navigation("Cests");
                });

            modelBuilder.Entity("Feirapp.Entities.Entities.Store", b =>
                {
                    b.Navigation("PriceLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
